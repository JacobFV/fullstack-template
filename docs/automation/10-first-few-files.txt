Certainly! I apologize for the confusion. Let's start from the beginning and write the entire code for each file without truncation. Here's the complete working implementation:

1. `src/main.tsx`

```tsx
import React from 'react';
import ReactDOM from 'react-dom';
import { ChakraProvider } from '@chakra-ui/react';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { ReactRouter } from '@tanstack/react-router';
import theme from './styles/theme';
import App from './App';

const queryClient = new QueryClient();

ReactDOM.render(
  <React.StrictMode>
    <ChakraProvider theme={theme}>
      <QueryClientProvider client={queryClient}>
        <ReactRouter>
          <App />
        </ReactRouter>
      </QueryClientProvider>
    </ChakraProvider>
  </React.StrictMode>,
  document.getElementById('root')
);
```

2. `src/App.tsx`

```tsx
import React from 'react';
import { Box } from '@chakra-ui/react';
import { Route, Routes } from '@tanstack/react-router';
import Navigation from './components/Navigation';
import Footer from './components/Footer';
import Home from './pages/Home';
import Login from './pages/Login';
import Register from './pages/Register';
import ForgotPassword from './pages/ForgotPassword';
import ResetPassword from './pages/ResetPassword';
import Account from './pages/Account';
import Playground from './pages/Playground';
import Activity from './pages/Activity';
import Billing from './pages/Billing';
import APIKeys from './pages/APIKeys';
import Settings from './pages/Settings';
import VerificationRequest from './pages/VerificationRequest';
import Verification from './pages/Verification';
import PrivacyPolicy from './pages/PrivacyPolicy';
import TermsOfService from './pages/TermsOfService';

const App: React.FC = () => {
  return (
    <Box>
      <Navigation />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
        <Route path="/forgot-password" element={<ForgotPassword />} />
        <Route path="/reset-password" element={<ResetPassword />} />
        <Route path="/account" element={<Account />} />
        <Route path="/playground" element={<Playground />} />
        <Route path="/activity" element={<Activity />} />
        <Route path="/billing" element={<Billing />} />
        <Route path="/api-keys" element={<APIKeys />} />
        <Route path="/settings" element={<Settings />} />
        <Route path="/verification-request" element={<VerificationRequest />} />
        <Route path="/verification" element={<Verification />} />
        <Route path="/privacy-policy" element={<PrivacyPolicy />} />
        <Route path="/terms-of-service" element={<TermsOfService />} />
      </Routes>
      <Footer />
    </Box>
  );
};

export default App;
```

3. `src/components/Navigation.tsx`

```tsx
import React from 'react';
import { Box, Flex, Link } from '@chakra-ui/react';
import { Link as RouterLink, useLocation } from '@tanstack/react-router';

const Navigation: React.FC = () => {
  const location = useLocation();

  return (
    <Box as="nav" bg="gray.100" py={4}>
      <Flex justify="space-between" align="center" maxW="container.lg" mx="auto">
        <Link as={RouterLink} to="/" fontWeight="bold">
          GOTCHA
        </Link>
        <Flex>
          <Link
            as={RouterLink}
            to="/account"
            ml={4}
            fontWeight={location.pathname === '/account' ? 'bold' : 'normal'}
          >
            Account
          </Link>
          <Link
            as={RouterLink}
            to="/playground"
            ml={4}
            fontWeight={location.pathname === '/playground' ? 'bold' : 'normal'}
          >
            Playground
          </Link>
          <Link
            as={RouterLink}
            to="/docs"
            ml={4}
            fontWeight={location.pathname === '/docs' ? 'bold' : 'normal'}
          >
            Documentation
          </Link>
        </Flex>
      </Flex>
    </Box>
  );
};

export default Navigation;
```

4. `src/components/Footer.tsx`

```tsx
import React from 'react';
import { Box, Flex, Link, Text } from '@chakra-ui/react';
import { Link as RouterLink } from '@tanstack/react-router';

const Footer: React.FC = () => {
  return (
    <Box as="footer" bg="gray.100" py={8}>
      <Flex justify="space-between" align="center" maxW="container.lg" mx="auto">
        <Text>&copy; {new Date().getFullYear()} GOTCHA. All rights reserved.</Text>
        <Flex>
          <Link as={RouterLink} to="/privacy-policy" ml={4}>
            Privacy Policy
          </Link>
          <Link as={RouterLink} to="/terms-of-service" ml={4}>
            Terms of Service
          </Link>
        </Flex>
      </Flex>
    </Box>
  );
};

export default Footer;
```

5. `src/pages/Home.tsx`

```tsx
import React from 'react';
import { Box, Button, Heading, Text } from '@chakra-ui/react';
import { Link as RouterLink } from '@tanstack/react-router';

const Home: React.FC = () => {
  return (
    <Box maxW="container.lg" mx="auto" py={8}>
      <Heading as="h1" size="xl" mb={4}>
        Welcome to GOTCHA
      </Heading>
      <Text fontSize="xl" mb={8}>
        The ultimate Graphical Online Turing test to Confirm Human Activity.
      </Text>
      <Button as={RouterLink} to="/playground" colorScheme="blue" size="lg">
        Try it out
      </Button>
    </Box>
  );
};

export default Home;
```

6. `src/pages/Login.tsx`

```tsx
import React, { useState } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { Link as RouterLink, useNavigate } from '@tanstack/react-router';
import { useMutation } from '@tanstack/react-query';
import { login } from '../services/api';

const Login: React.FC = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const { mutate: loginMutation, isLoading, error } = useMutation(login, {
    onSuccess: () => {
      navigate('/account');
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    loginMutation({ email, password });
  };

  return (
    <Box maxW="container.sm" mx="auto" py={8}>
      <Heading as="h1" size="xl" mb={8}>
        Login
      </Heading>
      <form onSubmit={handleSubmit}>
        <FormControl id="email" mb={4}>
          <FormLabel>Email address</FormLabel>
          <Input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </FormControl>
        <FormControl id="password" mb={8}>
          <FormLabel>Password</FormLabel>
          <Input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </FormControl>
        {error && (
          <Text color="red.500" mb={4}>
            {error.message}
          </Text>
        )}
        <Button type="submit" colorScheme="blue" size="lg" width="full" isLoading={isLoading}>
          Login
        </Button>
      </form>
      <Box mt={8}>
        <RouterLink to="/forgot-password">Forgot password?</RouterLink>
      </Box>
      <Box mt={4}>
        Don't have an account? <RouterLink to="/register">Register</RouterLink>
      </Box>
    </Box>
  );
};

export default Login;
```

7. `src/pages/Register.tsx`

```tsx
import React, { useState } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { Link as RouterLink, useNavigate } from '@tanstack/react-router';
import { useMutation } from '@tanstack/react-query';
import { register } from '../services/api';

const Register: React.FC = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const { mutate: registerMutation, isLoading, error } = useMutation(register, {
    onSuccess: () => {
      navigate('/login');
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    registerMutation({ name, email, password });
  };

  return (
    <Box maxW="container.sm" mx="auto" py={8}>
      <Heading as="h1" size="xl" mb={8}>
        Register
      </Heading>
      <form onSubmit={handleSubmit}>
        <FormControl id="name" mb={4}>
          <FormLabel>Name</FormLabel>
          <Input
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
            required
          />
        </FormControl>
        <FormControl id="email" mb={4}>
          <FormLabel>Email address</FormLabel>
          <Input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </FormControl>
        <FormControl id="password" mb={8}>
          <FormLabel>Password</FormLabel>
          <Input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </FormControl>
        {error && (
          <Text color="red.500" mb={4}>
            {error.message}
          </Text>
        )}
        <Button type="submit" colorScheme="blue" size="lg" width="full" isLoading={isLoading}>
          Register
        </Button>
      </form>
      <Box mt={8}>
        Already have an account? <RouterLink to="/login">Login</RouterLink>
      </Box>
    </Box>
  );
};

export default Register;
```

8. `src/pages/ForgotPassword.tsx`

```tsx
import React, { useState } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { Link as RouterLink } from '@tanstack/react-router';
import { useMutation } from '@tanstack/react-query';
import { forgotPassword } from '../services/api';

const ForgotPassword: React.FC = () => {
  const [email, setEmail] = useState('');
  const [successMessage, setSuccessMessage] = useState('');

  const { mutate: forgotPasswordMutation, isLoading, error } = useMutation(forgotPassword, {
    onSuccess: () => {
      setSuccessMessage('Password reset email sent. Please check your inbox.');
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    forgotPasswordMutation({ email });
  };

  return (
    <Box maxW="container.sm" mx="auto" py={8}>
      <Heading as="h1" size="xl" mb={8}>
        Forgot Password
      </Heading>
      <form onSubmit={handleSubmit}>
        <FormControl id="email" mb={8}>
          <FormLabel>Email address</FormLabel>
          <Input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </FormControl>
        {error && (
          <Text color="red.500" mb={4}>
            {error.message}
          </Text>
        )}
        {successMessage && (
          <Text color="green.500" mb={4}>
            {successMessage}
          </Text>
        )}
        <Button type="submit" colorScheme="blue" size="lg" width="full" isLoading={isLoading}>
          Reset Password
        </Button>
      </form>
      <Box mt={8}>
        Remember your password? <RouterLink to="/login">Login</RouterLink>
      </Box>
    </Box>
  );
};

export default ForgotPassword;
```

9. `src/pages/ResetPassword.tsx`

```tsx
import React, { useState } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { Link as RouterLink, useNavigate, useSearch } from '@tanstack/react-router';
import { useMutation } from '@tanstack/react-query';
import { resetPassword } from '../services/api';

const ResetPassword: React.FC = () => {
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const navigate = useNavigate();
  const search = useSearch();
  const token = search.token as string;

  const { mutate: resetPasswordMutation, isLoading, error } = useMutation(resetPassword, {
    onSuccess: () => {
      navigate('/login');
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (password !== confirmPassword) {
      alert('Passwords do not match');
      return;
    }
    resetPasswordMutation({ token, password });
  };

  return (
    <Box maxW="container.sm" mx="auto" py={8}>
      <Heading as="h1" size="xl" mb={8}>
        Reset Password
      </Heading>
      <form onSubmit={handleSubmit}>
        <FormControl id="password" mb={4}>
          <FormLabel>New Password</FormLabel>
          <Input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </FormControl>
        <FormControl id="confirmPassword" mb={8}>
          <FormLabel>Confirm Password</FormLabel>
          <Input
            type="password"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
            required
          />
        </FormControl>
        {error && (
          <Text color="red.500" mb={4}>
            {error.message}
          </Text>
        )}
        <Button type="submit" colorScheme="blue" size="lg" width="full" isLoading={isLoading}>
          Reset Password
        </Button>
      </form>
      <Box mt={8}>
        <RouterLink to="/login">Back to Login</RouterLink>
      </Box>
    </Box>
  );
};

export default ResetPassword;
```